#!/bin/sh
# postinst script for ros-kinetic-roslaunch-patched
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


diversion_added_version=1.0.0
this_version=1.0.1

config_file='/opt/ros/kinetic/lib/python2.7/dist-packages/roslaunch/config.py'

if
        test "$1" = configure -o "$1" = triggered
then
        cat $config_file.original > $config_file

	sed -i 's/@param roslaunch_files: list of launch files to load/@param roslaunch_files: list of launch files to load. Each item may also\
      be a tuple where the first item is the launch file and the second item\
      is a string containing arguments./' $config_file

	sed -i 's/@type  roslaunch_files: \[str\]/@type  roslaunch_files: \[str|(str, str)\]/' \
	$config_file

	sed -i 's/for f in roslaunch_files:/for f in roslaunch_files:\
        if isinstance(f, tuple):\
            f, args = f\
        else:\
            args = None/' $config_file

	sed -i 's/loader.load(f, config, verbose=verbose)/loader.load(f, config, argv=args, verbose=verbose)/' \
	$config_file
fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
